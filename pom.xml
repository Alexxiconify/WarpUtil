<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.Alexxiconify</groupId>
    <artifactId>NestedWarps</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>21</maven.compiler.source> <!-- Updated to Java 21 -->
        <maven.compiler.target>21</maven.compiler.target> <!-- Updated to Java 21 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <repositories>
        <!-- SpigotMC Repository for Spigot API -->
        <repository>
            <id>spigotmc-repo</id>
            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
        </repository>
        <!-- PaperMC Repository for Paper API (if using Paper-specific features or latest API) -->
        <repository>
            <id>papermc-repo</id>
            <url>https://repo.papermc.io/repository/maven-public/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Paper API Dependency -->
        <dependency>
            <groupId>io.papermc.paper</groupId>
            <artifactId>paper-api</artifactId>
            <version>1.20.1-R0.1-SNAPSHOT</version> <!-- IMPORTANT: Change this to your server's exact API version -->
            <scope>provided</scope>
        </dependency>
        <!-- Optional: If you use @NotNull, add org.jetbrains.annotations -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>23.0.0</version> <!-- Use a recent version -->
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>clean package</defaultGoal>
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <!-- Explicitly set the Java executable to avoid 'system modules path not set' warning -->
                    <!--suppress UnresolvedMavenProperty -->
                    <executable>${java.home}/bin/javac</executable> <!-- Corrected property to java.home -->
                </configuration>
            </plugin>
            <!-- Maven Jar Plugin: Creates the initial JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <!-- Removed the <configuration> with <classifier>original</classifier>
                     to ensure the default main artifact is produced for shading. -->
            </plugin>
            <!-- Maven Shade Plugin: To bundle external libraries and create the final plugin JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.2</version> <!-- Updated to a newer version for Java 21 compatibility -->
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>

                            <artifactSet>
                                <includes>
                                    <!-- This tells shade to include your own plugin classes and annotations,
                                         as well as any other necessary runtime dependencies -->
                                    <include>net.Alexxiconify:NestedWarps</include>
                                    <include>org.jetbrains:annotations</include>
                                    <!-- Add other runtime dependencies here if you have any -->
                                </includes>
                                <excludes>
                                    <!-- Exclude 'provided' dependencies like Paper API from being shaded -->
                                    <exclude>io.papermc.paper:paper-api</exclude>
                                </excludes>
                            </artifactSet>

                            <!-- Add filters to handle overlapping resources -->
                            <filters>
                                <filter>
                                    <artifact>org.jetbrains:annotations</artifact>
                                    <excludes>
                                        <exclude>META-INF/MANIFEST.MF</exclude>
                                    </excludes>
                                </filter>
                            </filters>

                            <!-- Relocate classes to avoid conflicts with other plugins -->
                            <relocations>
                                <relocation>
                                    <pattern>org.jetbrains.annotations</pattern>
                                    <shadedPattern>net.Alexxiconify.warputil.lib.annotations</shadedPattern>
                                </relocation>
                                <!-- Add other relocations for any bundled dependencies to avoid conflicts -->
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <!-- Important: Ensure plugin.yml and paper-plugin.yml are copied to the root of the JAR -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
